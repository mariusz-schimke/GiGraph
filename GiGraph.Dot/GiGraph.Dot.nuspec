<?xml version="1.0" encoding="utf-8"?>
<package>
  <metadata>
    <id>$id$</id>
    <version>$version$</version>
    <title>$title$</title>
    <tags>DOT Graphviz graph</tags>

    <authors>$author$</authors>
    <owners>$author$</owners>
    <copyright>$copyright$</copyright>
    
    <icon>images\icon.png</icon>
    
    <projectUrl>https://github.com/mariusz-schimke/GiGraph</projectUrl>
    <repository type="git" url="https://github.com/mariusz-schimke/GiGraph.git" branch="master" commit="e9a9f2a038338f87d48dc0f42bbc56ced33c1da3" />

    <license type="file">LICENSE.txt</license>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    
    <summary>Simple yet versatile library for generating graphs in the DOT language.</summary>
    
    <description>A simple solution for generating graphs in the DOT language. The output is a textual script that can be visualized and/or converted to an image with external tools. A handy one is a plugin for Visual Studio Code, named Graphviz Preview. There are also online tools like www.webgraphviz.com, where you can paste the script to view your graph.</description>
    
    <releaseNotes>- Node port support added. It enables setting which side of a node an edge head and/or tail is attached to.
- Added methods to edge, node, subgraph, and cluster collections to simplify adding new elements.
- The collection of subgraphs has been split in two separate collections (Subgraphs, Clusters).
- Added support for node groups (in the DOT script they are rendered as a list of nodes with a shared list of attributes).
- Added support for edge sequences (in the DOT script they are rendered as a sequence of nodes and edges with a shared list of attributes; subgraphs in the sequence are supported too).
- Added support for endpoints embedded in subgraphs. This facilitates generating edges joining one node to multiple nodes, multiple nodes to one node, or multiple nodes to multiple nodes.
- The elements of the DOT script can optionally be sorted now by setting an appropriate flag in the DOT generation options (disabled by default).
- Refactoring.

See also https://github.com/mariusz-schimke/GiGraph/releases</releaseNotes>
  </metadata>

  <files>
    <file src="..\Assets\icon.png" target="images\" />
    <file src="..\LICENSE.txt" target="" />
  </files>
</package>